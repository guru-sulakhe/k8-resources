#These are cache pods
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cache
spec:
  selector:
    matchLabels:
      app: store
  replicas: 2 #Here 2 pods of cache are created 
  template:
    metadata:
      labels:
        app: store
    spec:
      affinity:
        podAntiAffinity: #Thus running each pod of cache in different nodes i..e 1st pod will not run in 2nd pod node
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - store
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: redis-server
        image: redis:3.2-alpine
---
#These are application pods
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server
spec:
  selector:
    matchLabels:
      app: web-store
  replicas: 2 #Here 2 pods of app are created
  template:
    metadata:
      labels:
        app: web-store
    spec:
      affinity:
        podAntiAffinity: #2nd pod will run in a node of redis is running and pod-1 is not running
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - web-store
            topologyKey: "kubernetes.io/hostname"
        podAffinity: #1st pod is running on a node,as per affinity it should go to where redis is running
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - store
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: web-app
        image: nginx:1.16-alpine